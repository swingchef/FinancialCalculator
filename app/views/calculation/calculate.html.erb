<h3>Please enter each respective debt which you have along with the debt amount, interest rate, and the minimum monthly payment amount. Don't worry about the order.</h3>
<div class="income">
	<input type="text" size="25" name="income_input" placeholder="Ex. 3000"/>
</div>
<div id="p_scents">
	<p>
		<label for="p_scnts">
			<input type="text" id="p_scnt" size="25" name="dname_scnt_1" value="" placeholder="Debt Name" />
			<input type="text" id="amount_scnt" size="25" name="amount_scnt_1"placeholder="Debt Amount"/>
			<input type="text" id="interest_scnt" name="interest_scnt_1" size="25" placeholder="Interest Rate Ex:9.5%= 9.5"/>
			<input type="text" id="mpamount_scnt" size="25" name="minpayamount_scnt_1"placeholder="Min. Monthly Payment"/>
		</label>
	</p>
</div>
<h3><a href="#" id="addScnt">Add Another Debt</a></h3>
<button id="calculate_button" value="submit">
	Calculate
</button>
<script>
	//TODO add minimum monthly payment amount to all appropriate areas
	//TODO take out alerts when finished debugging
	//TODO number/has value validation on the input forms
	//TODO create a boolean within the last for loop and set it to false when inputs are blank/not right, or set it to true only when all three have been completed
	//use the boolean to prevent an incomplete array from being sent to the next method.
	var button = document.getElementById('calculate_button');
	//NEED TO STILL CREATE A FOR LOOP WHICH STARTS AROUND 20 -> 1, CHECKS FOR dname_scnt_.value, when found, sets i = .value and breaks
	var i = 4;
	//Is this a good amount? this will change to whatever the for loop finds
	var financialArray = [];
	//this is the array which will store the values of each row

	button.addEventListener('click', function() {
		//code which is commented out was a test
		// var firstCell = $('input[name="dname_scnt_1"]').val();
		// alert(firstCell);
		// if(firstCell.length > 0 & !typeof firstCell == "undefined"){
		// financialArray[0][0] = firstCell;
		// alert(firstCell);
		//     }

		for ( i = 100; i > 1; i--) {//this for loop assumes that the user will have no more than 100 inputs, increase var i to desired amount
			//for loop is finding
			var testerInput = document.getElementsByName("dname_scnt_" + i);
			if (testerInput.length > 0) {
				break;
			}//end if
		}//end for

		alert("number of input rows is: " + i);
		//TODO take this out when debug.complete
		var arrayRowCounter = 0;
		for (var z = 1; z < i + 1; z++) {//this for loop will be correct when i holds the correct number
			//below the values are retrieved from the input boxes

			var dnameVar = $('input[name=\"dname_scnt_' + z + '\"]').val();
			alert("debt namelength: " + dnameVar.length)
			var amountVar = parseFloat($('input[name=\"amount_scnt_' + z + '\"]').val());
			var interestVar = parseFloat($('input[name=\"interest_scnt_' + z + '\"]').val());
			var minPayVar = parseFloat($('input[name=\"minpayamount_scnt_' + z + '\"]').val());
			alert("dnamevar: " + dnameVar);
			alert("amountvar " + amountVar);
			alert("interestVar " + interestVar);
			alert("minVar " + minPayVar);
			if (dnameVar.length == 0 & isNaN(amountVar) & isNaN(interestVar) & isNaN(minPayVar)){
				alert("Nothing on this row has anything in it");
				continue;
			};
			if ( dnameVar.length > 0 & (isNaN(amountVar) | isNaN(interestVar) | isNaN(minPayVar))) {
				alert("One of your rows doesn't have  all of its numbers. Please fix this and then press calculate again");
				break;
				//TODO perform this check for amountVar and InterestVar instead

			};
			if (dnameVar.length == 0 & (!isNaN(amountVar) | !isNaN(interestVar) | !isNaN(minPayVar))) {
				alert("Got to missing inputs test");

				alert("Length of dnameVar_" + z + "is 0");
				//testing to see if the next row down has a value in the first input
				//if z is less than i, need to keep going

				alert("Please fill in the missing values and then press calculate again");
				break;

			}; 
				//get the other inputs in the same row if the first input has something
				//add the values of each row to the array

				alert(dnameVar + amountVar + interestVar + minPayVar);

				alert("Got to array");
				financialArray[arrayRowCounter] = {
					0 : dnameVar,
					1 : amountVar,
					2 : interestVar,
					3 : minPayVar
				};

				//the array is sorted according to AMOUNT(Should this be something else?)
				financialArray = financialArray.sort(function(a, b) {
					return a[1] > b[1];
				});
				console.log(financialArray);
				var total = financialArray[arrayRowCounter][1] + financialArray[arrayRowCounter][2] + financialArray[arrayRowCounter][3];

				//alert("Array sum: "+ total);
				arrayRowCounter++;
				//don't forget to convert this into a decimal
				//as long as the rows hold the right inputs, it doesn't matter what order these are stored in
			 //else
		};//for loop
		//alert("Reached End of Inputs, Going to About Page");

		//document.location.href ="/about";
		//this will change to whatever the calculation page is

	});
	//eventListener
</script>